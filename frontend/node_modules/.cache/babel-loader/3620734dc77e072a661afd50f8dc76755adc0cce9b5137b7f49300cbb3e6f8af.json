{"ast":null,"code":"const sendMessage = async () => {\n  const newChat = [...chatLog, {\n    role: \"user\",\n    content: userInput\n  }];\n  setChatLog(newChat);\n  try {\n    const response = await fetch(\"http://localhost:5000/chat\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        message: userInput\n      })\n    });\n    const data = await response.json();\n    setChatLog([...newChat, {\n      role: \"bot\",\n      content: data.reply\n    }]);\n  } catch (error) {\n    console.error(\"Frontend fetch error:\", error);\n    setChatLog([...newChat, {\n      role: \"bot\",\n      content: \"‚ùå Error connecting to Jobsy ü§ñ\"\n    }]);\n  }\n  setUserInput(\"\");\n};","map":{"version":3,"names":["sendMessage","newChat","chatLog","role","content","userInput","setChatLog","response","fetch","method","headers","body","JSON","stringify","message","data","json","reply","error","console","setUserInput"],"sources":["D:/Jobsy_Chatbot/frontend/src/App.js"],"sourcesContent":["const sendMessage = async () => {\r\n  const newChat = [...chatLog, { role: \"user\", content: userInput }];\r\n  setChatLog(newChat);\r\n\r\n  try {\r\n    const response = await fetch(\"http://localhost:5000/chat\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ message: userInput }),\r\n    });\r\n\r\n    const data = await response.json();\r\n    setChatLog([...newChat, { role: \"bot\", content: data.reply }]);\r\n  } catch (error) {\r\n    console.error(\"Frontend fetch error:\", error);\r\n    setChatLog([...newChat, { role: \"bot\", content: \"‚ùå Error connecting to Jobsy ü§ñ\" }]);\r\n  }\r\n\r\n  setUserInput(\"\");\r\n};\r\n"],"mappings":"AAAA,MAAMA,WAAW,GAAG,MAAAA,CAAA,KAAY;EAC9B,MAAMC,OAAO,GAAG,CAAC,GAAGC,OAAO,EAAE;IAAEC,IAAI,EAAE,MAAM;IAAEC,OAAO,EAAEC;EAAU,CAAC,CAAC;EAClEC,UAAU,CAACL,OAAO,CAAC;EAEnB,IAAI;IACF,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAA4B,EAAE;MACzDC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,OAAO,EAAET;MAAU,CAAC;IAC7C,CAAC,CAAC;IAEF,MAAMU,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;IAClCV,UAAU,CAAC,CAAC,GAAGL,OAAO,EAAE;MAAEE,IAAI,EAAE,KAAK;MAAEC,OAAO,EAAEW,IAAI,CAACE;IAAM,CAAC,CAAC,CAAC;EAChE,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7CZ,UAAU,CAAC,CAAC,GAAGL,OAAO,EAAE;MAAEE,IAAI,EAAE,KAAK;MAAEC,OAAO,EAAE;IAAiC,CAAC,CAAC,CAAC;EACtF;EAEAgB,YAAY,CAAC,EAAE,CAAC;AAClB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}