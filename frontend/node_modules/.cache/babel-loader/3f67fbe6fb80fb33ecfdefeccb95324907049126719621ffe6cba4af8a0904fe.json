{"ast":null,"code":"var _jsxFileName = \"D:\\\\Jobsy_Chatbot\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [userInput, setUserInput] = useState('');\n  const [chatLog, setChatLog] = useState([]);\n  const sendMessage = async () => {\n    if (!userInput.trim()) return;\n\n    // Show user message in chat\n    const newChat = [...chatLog, {\n      role: 'user',\n      content: userInput\n    }];\n    setChatLog(newChat);\n    try {\n      const res = await fetch('http://localhost:5000/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: userInput\n        })\n      });\n      const data = await res.json();\n      setChatLog([...newChat, {\n        role: 'bot',\n        content: data.reply\n      }]);\n    } catch (error) {\n      setChatLog([...newChat, {\n        role: 'bot',\n        content: 'Error connecting to Jobsy ðŸ¤–'\n      }]);\n    }\n    setUserInput('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Jobsy \\uD83E\\uDD16 \\u2013 AI Career Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.chatBox,\n      children: chatLog.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: msg.role === 'user' ? styles.user : styles.bot,\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.role === 'user' ? 'You' : 'Jobsy', \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), \" \", msg.content]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.inputArea,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Ask me anything about careers...\",\n        value: userInput,\n        onChange: e => setUserInput(e.target.value),\n        onKeyDown: e => e.key === 'Enter' && sendMessage(),\n        style: styles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        style: styles.button,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"QxTOZ9NXReh9HAvez9XVQCPvcDE=\");\n_c = App;\nconst styles = {\n  container: {\n    maxWidth: '600px',\n    margin: '30px auto',\n    fontFamily: 'sans-serif'\n  },\n  chatBox: {\n    background: '#f3f3f3',\n    borderRadius: '8px',\n    padding: '20px',\n    height: '400px',\n    overflowY: 'auto',\n    marginBottom: '20px'\n  },\n  user: {\n    textAlign: 'right',\n    marginBottom: '10px'\n  },\n  bot: {\n    textAlign: 'left',\n    marginBottom: '10px'\n  },\n  inputArea: {\n    display: 'flex',\n    gap: '10px'\n  },\n  input: {\n    flex: 1,\n    padding: '10px',\n    fontSize: '16px'\n  },\n  button: {\n    padding: '10px 20px',\n    fontSize: '16px'\n  }\n};\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","userInput","setUserInput","chatLog","setChatLog","sendMessage","trim","newChat","role","content","res","fetch","method","headers","body","JSON","stringify","message","data","json","reply","error","style","styles","container","children","fileName","_jsxFileName","lineNumber","columnNumber","chatBox","map","msg","index","user","bot","inputArea","type","placeholder","value","onChange","e","target","onKeyDown","key","input","onClick","button","_c","maxWidth","margin","fontFamily","background","borderRadius","padding","height","overflowY","marginBottom","textAlign","display","gap","flex","fontSize","$RefreshReg$"],"sources":["D:/Jobsy_Chatbot/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction App() {\r\n  const [userInput, setUserInput] = useState('');\r\n  const [chatLog, setChatLog] = useState([]);\r\n\r\n  const sendMessage = async () => {\r\n    if (!userInput.trim()) return;\r\n\r\n    // Show user message in chat\r\n    const newChat = [...chatLog, { role: 'user', content: userInput }];\r\n    setChatLog(newChat);\r\n\r\n    try {\r\n      const res = await fetch('http://localhost:5000/chat', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ message: userInput }),\r\n      });\r\n\r\n      const data = await res.json();\r\n      setChatLog([...newChat, { role: 'bot', content: data.reply }]);\r\n    } catch (error) {\r\n      setChatLog([...newChat, { role: 'bot', content: 'Error connecting to Jobsy ðŸ¤–' }]);\r\n    }\r\n\r\n    setUserInput('');\r\n  };\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <h1>Jobsy ðŸ¤– â€“ AI Career Chatbot</h1>\r\n\r\n      <div style={styles.chatBox}>\r\n        {chatLog.map((msg, index) => (\r\n          <div key={index} style={msg.role === 'user' ? styles.user : styles.bot}>\r\n            <strong>{msg.role === 'user' ? 'You' : 'Jobsy'}:</strong> {msg.content}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div style={styles.inputArea}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Ask me anything about careers...\"\r\n          value={userInput}\r\n          onChange={(e) => setUserInput(e.target.value)}\r\n          onKeyDown={(e) => e.key === 'Enter' && sendMessage()}\r\n          style={styles.input}\r\n        />\r\n        <button onClick={sendMessage} style={styles.button}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  container: { maxWidth: '600px', margin: '30px auto', fontFamily: 'sans-serif' },\r\n  chatBox: {\r\n    background: '#f3f3f3',\r\n    borderRadius: '8px',\r\n    padding: '20px',\r\n    height: '400px',\r\n    overflowY: 'auto',\r\n    marginBottom: '20px',\r\n  },\r\n  user: { textAlign: 'right', marginBottom: '10px' },\r\n  bot: { textAlign: 'left', marginBottom: '10px' },\r\n  inputArea: { display: 'flex', gap: '10px' },\r\n  input: { flex: 1, padding: '10px', fontSize: '16px' },\r\n  button: { padding: '10px 20px', fontSize: '16px' },\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}